/* asseturls.js
 * © 2012 Hugo Landau <hlandau@devever.net>
 * Manage asset URLs in node.js.
 * MIT License.
 */

var urlM = require('url');
var netmask = require('netmask');

module.exports = function asseturls(options) {
  var options = options || {};
  var opt_ctr = {options: options};

  function set_config(c) {
    opt_ctr.options = c;
    create_ip_cache();
  };

  function asset_url(url) {
    var baseUrl   = opt_ctr.options.baseUrl;
    var assets    = opt_ctr.options.assets;
    if (opt_ctr.options.dummyMode != true && assets[url] != undefined)
      url = assets[url];
    return urlM.resolve(baseUrl, url);
  };

  function create_ip_cache() {
    var ranges = opt_ctr.options.apiRanges;
    if (!(ranges instanceof Array)) {
      opt_ctr.ipcache = null;
      return;
    }
    opt_ctr.ipcache = [];
    for (var x in ranges) {
      opt_ctr.ipcache.push(new netmask.Netmask(ranges[x]));
    }
  };

  function check_ip(ip) {
    var ranges = opt_ctr.ipcache;
    if (!(ranges instanceof Array)) return true;
    for (var x in ranges) {
      if (ranges[x].contains(ip)) return true;
    }
    return false;
  };

  set_config(options);

  function handler(req, res, next) {
    try {
      if (opt_ctr.options.enableApi && opt_ctr.options.apiTokens && check_ip(req.ip) && req.path == '/.asseturls') {
        var token = req.body.token;
        if (!token) token = req.query.token;
        if (opt_ctr.options.apiTokens.indexOf(token) != -1) {
          if (req.method == 'POST' && req.body && req.body.config) {
            set_config(JSON.parse(req.body.config));
          }
          res.json({'status': 'ok', 'config': opt_ctr.options});
          return;
        }
      }
    } catch(e) { console.log(e); }
    next();
  };
  function dummyHandler(req, res, next) { next(); };
  global.asset_url = asset_url;
  return (opt_ctr.options.enableApi ? handler : dummyHandler);
};

